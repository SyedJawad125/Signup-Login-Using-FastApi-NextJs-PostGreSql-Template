"""create users table

Revision ID: 3971e80d0b07
Revises: 
Create Date: 2025-07-17 11:26:20.667407

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3971e80d0b07'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='TRUE', nullable=False),
    sa.Column('is_superuser', sa.Boolean(), server_default='FALSE', nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_departments_id'), 'departments', ['id'], unique=False)
    op.create_table('leaves',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('leave_type', sa.String(), nullable=False),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leaves_id'), 'leaves', ['id'], unique=False)
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('module_name', sa.String(length=50), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.create_table('user_role',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('leave_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['leave_id'], ['leaves.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('ranks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('salary_range_min', sa.Float(), nullable=True),
    sa.Column('salary_range_max', sa.Float(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ranks_id'), 'ranks', ['id'], unique=False)
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], )
    )
    op.create_table('user_permission',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('hire_date', sa.Date(), nullable=False),
    sa.Column('job_title', sa.String(length=100), nullable=False),
    sa.Column('salary', sa.Float(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('rank_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['rank_id'], ['ranks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employees_email'), 'employees', ['email'], unique=True)
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_table('attendances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('check_in', sa.Time(), nullable=True),
    sa.Column('check_out', sa.Time(), nullable=True),
    sa.Column('is_present', sa.Boolean(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attendances_id'), 'attendances', ['id'], unique=False)
    op.create_table('employee_salaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('basic_salary', sa.Float(), nullable=False),
    sa.Column('overtime_rate', sa.Float(), nullable=True),
    sa.Column('bonus_amount', sa.Float(), nullable=True),
    sa.Column('housing_allowance', sa.Float(), nullable=True),
    sa.Column('transport_allowance', sa.Float(), nullable=True),
    sa.Column('medical_allowance', sa.Float(), nullable=True),
    sa.Column('tax_deduction', sa.Float(), nullable=True),
    sa.Column('insurance_deduction', sa.Float(), nullable=True),
    sa.Column('other_deductions', sa.Float(), nullable=True),
    sa.Column('net_salary', sa.Float(), nullable=False),
    sa.Column('salary_month', sa.Date(), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=True),
    sa.Column('payment_status', sa.String(), nullable=True),
    sa.Column('remarks', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('rank_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['rank_id'], ['ranks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_salaries_id'), 'employee_salaries', ['id'], unique=False)
    op.create_table('salary_structures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('base_salary', sa.Float(), nullable=False),
    sa.Column('allowances', sa.Float(), nullable=True),
    sa.Column('bonuses', sa.Float(), nullable=True),
    sa.Column('deductions', sa.Float(), nullable=True),
    sa.Column('payment_frequency', sa.String(), nullable=True),
    sa.Column('effective_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('rank_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['rank_id'], ['ranks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_salary_structures_id'), 'salary_structures', ['id'], unique=False)
    op.create_table('payslips',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payslip_number', sa.String(), nullable=False),
    sa.Column('pay_period_start', sa.Date(), nullable=False),
    sa.Column('pay_period_end', sa.Date(), nullable=False),
    sa.Column('basic_salary', sa.Float(), nullable=False),
    sa.Column('overtime_pay', sa.Float(), nullable=True),
    sa.Column('bonus', sa.Float(), nullable=True),
    sa.Column('housing_allowance', sa.Float(), nullable=True),
    sa.Column('transport_allowance', sa.Float(), nullable=True),
    sa.Column('medical_allowance', sa.Float(), nullable=True),
    sa.Column('other_allowances', sa.Float(), nullable=True),
    sa.Column('gross_salary', sa.Float(), nullable=False),
    sa.Column('tax_deduction', sa.Float(), nullable=True),
    sa.Column('insurance_deduction', sa.Float(), nullable=True),
    sa.Column('loan_deduction', sa.Float(), nullable=True),
    sa.Column('other_deductions', sa.Float(), nullable=True),
    sa.Column('total_deductions', sa.Float(), nullable=False),
    sa.Column('net_salary', sa.Float(), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=True),
    sa.Column('payment_method', sa.String(), nullable=True),
    sa.Column('bank_account', sa.String(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('employee_salary_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('rank_id', sa.Integer(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('approved_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['employee_salary_id'], ['employee_salaries.id'], ),
    sa.ForeignKeyConstraint(['rank_id'], ['ranks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payslip_number')
    )
    op.create_index(op.f('ix_payslips_id'), 'payslips', ['id'], unique=False)
    op.create_table('salary_histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('previous_salary', sa.Float(), nullable=False),
    sa.Column('new_salary', sa.Float(), nullable=False),
    sa.Column('change_percentage', sa.Float(), nullable=False),
    sa.Column('change_type', sa.String(), nullable=False),
    sa.Column('change_reason', sa.Text(), nullable=True),
    sa.Column('effective_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('previous_rank_id', sa.Integer(), nullable=False),
    sa.Column('new_rank_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('salary_structure_id', sa.Integer(), nullable=True),
    sa.Column('employee_salary_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['employee_salary_id'], ['employee_salaries.id'], ),
    sa.ForeignKeyConstraint(['new_rank_id'], ['ranks.id'], ),
    sa.ForeignKeyConstraint(['previous_rank_id'], ['ranks.id'], ),
    sa.ForeignKeyConstraint(['salary_structure_id'], ['salary_structures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_salary_histories_id'), 'salary_histories', ['id'], unique=False)
    op.create_table('timesheets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('hours_worked', sa.Float(), nullable=False),
    sa.Column('overtime_hours', sa.Float(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('attendance_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attendance_id'], ['attendances.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_timesheets_id'), 'timesheets', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_timesheets_id'), table_name='timesheets')
    op.drop_table('timesheets')
    op.drop_index(op.f('ix_salary_histories_id'), table_name='salary_histories')
    op.drop_table('salary_histories')
    op.drop_index(op.f('ix_payslips_id'), table_name='payslips')
    op.drop_table('payslips')
    op.drop_index(op.f('ix_salary_structures_id'), table_name='salary_structures')
    op.drop_table('salary_structures')
    op.drop_index(op.f('ix_employee_salaries_id'), table_name='employee_salaries')
    op.drop_table('employee_salaries')
    op.drop_index(op.f('ix_attendances_id'), table_name='attendances')
    op.drop_table('attendances')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_index(op.f('ix_employees_email'), table_name='employees')
    op.drop_table('employees')
    op.drop_table('user_permission')
    op.drop_table('role_permission')
    op.drop_index(op.f('ix_ranks_id'), table_name='ranks')
    op.drop_table('ranks')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_table('user_role')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_leaves_id'), table_name='leaves')
    op.drop_table('leaves')
    op.drop_index(op.f('ix_departments_id'), table_name='departments')
    op.drop_table('departments')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    # ### end Alembic commands ###
