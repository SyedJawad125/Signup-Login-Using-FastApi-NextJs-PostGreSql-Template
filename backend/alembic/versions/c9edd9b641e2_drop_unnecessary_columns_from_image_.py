"""Drop unnecessary columns from Image table

Revision ID: c9edd9b641e2
Revises: a08ff043bea4
Create Date: 2025-07-18 18:22:16.607795

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c9edd9b641e2'
down_revision: Union[str, Sequence[str], None] = 'a08ff043bea4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('categories')
    op.drop_column('images', 'file_size')
    op.drop_column('images', 'image_path')
    op.drop_column('images', 'bulletsdescription')
    op.drop_column('images', 'original_filename')
    op.drop_column('images', 'mime_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('images', sa.Column('mime_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('original_filename', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('bulletsdescription', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('image_path', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('images', sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_table('categories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_by_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], name=op.f('categories_created_by_user_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], name=op.f('categories_updated_by_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('categories_pkey'))
    )
    # ### end Alembic commands ###
